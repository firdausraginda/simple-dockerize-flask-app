steps:

  # 1. build docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-docker-image'
    args:
      - 'build'
      - '-t'
      - 'flask-app-img:latest'
      - '.'

  # 2. tag docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'tag-docker-image'
    args:
      - 'tag'
      - 'flask-app-img:latest'
      - 'us-east1-docker.pkg.dev/alpine-life-350508/docker-base-image/flask-app-img:latest'

  # 3. push tagged docker image to google artifact registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-to-artifacts-registry'
    args:
      - 'push'
      - 'us-east1-docker.pkg.dev/alpine-life-350508/docker-base-image/flask-app-img:latest'

  # 4. download private & public ssh key from google cloud storage (GCS)
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'download-ssh-key'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil cp gs://pipeline-ops/creds/ssh_key_cloud_build ./ssh_key_cloud_build \
        && gsutil cp gs://pipeline-ops/creds/ssh_key_cloud_build.pub ./ssh_key_cloud_build.pub

  # 5. run bash command to:
    # a. set `ssh_key_cloud_build` file permission to ready only, to make it more secure
    # b. remove flask-app-img image and tagged image on GCE VM instance
    # c. re-run docker container on GCE VM instance
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'rerun-docker-container'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod 400 ./ssh_key_cloud_build \
        && gcloud compute ssh instance-20240324-050710 --zone=us-central1-a --ssh-key-file=./ssh_key_cloud_build \
          --command "\
            sudo docker image rm flask-app-img; \
            sudo docker image rm us-east1-docker.pkg.dev/alpine-life-350508/docker-base-image/flask-app-img; \
            cd /home/ragindafirdaus01/simple-dockerize-flask-app/; \
            sudo docker compose down; \
            sudo docker compose up -d"